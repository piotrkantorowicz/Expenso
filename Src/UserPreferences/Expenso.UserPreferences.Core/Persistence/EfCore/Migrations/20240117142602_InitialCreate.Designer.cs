// <auto-generated />
using System;
using Expenso.UserPreferences.Core.Persistence.EfCore;

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Expenso.UserPreferences.Core.Persistence.EfCore.Migrations
{
    [DbContext(typeof(UserPreferencesDbContext))]
    [Migration("20240117142602_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("user_preferences")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Expenso.UserPreferences.Core.Models.Preference", b =>
                {
                    b.Property<Guid>("PreferenceId")
                        .HasColumnType("uuid")
                        .HasColumnName("preferences_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("PreferenceId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("preferences", "user_preferences");
                });

            modelBuilder.Entity("Expenso.UserPreferences.Core.Models.Preference", b =>
                {
                    b.OwnsOne("Expenso.UserPreferences.Core.Models.FinancePreference", "FinancePreference", b1 =>
                        {
                            b1.Property<Guid>("PreferenceId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("AllowAddFinancePlanReviewers")
                                .HasColumnType("boolean")
                                .HasColumnName("allow_add_finance_plan_reviewers");

                            b1.Property<bool>("AllowAddFinancePlanSubOwners")
                                .HasColumnType("boolean")
                                .HasColumnName("allow_add_finance_plan_sub_owners");

                            b1.Property<int>("MaxNumberOfFinancePlanReviewers")
                                .HasColumnType("integer")
                                .HasColumnName("max_number_of_finance_plan_reviewers");

                            b1.Property<int>("MaxNumberOfSubFinancePlanSubOwners")
                                .HasColumnType("integer")
                                .HasColumnName("max_number_of_sub_finance_plan_sub_owners");

                            b1.HasKey("PreferenceId");

                            b1.ToTable("preferences", "user_preferences");

                            b1.WithOwner()
                                .HasForeignKey("PreferenceId");
                        });

                    b.OwnsOne("Expenso.UserPreferences.Core.Models.GeneralPreference", "GeneralPreference", b1 =>
                        {
                            b1.Property<Guid>("PreferenceId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("UseDarkMode")
                                .HasColumnType("boolean")
                                .HasColumnName("use_dark_mode");

                            b1.HasKey("PreferenceId");

                            b1.ToTable("preferences", "user_preferences");

                            b1.WithOwner()
                                .HasForeignKey("PreferenceId");
                        });

                    b.OwnsOne("Expenso.UserPreferences.Core.Models.NotificationPreference", "NotificationPreference", b1 =>
                        {
                            b1.Property<Guid>("PreferenceId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("SendFinanceReportEnabled")
                                .HasColumnType("boolean")
                                .HasColumnName("send_finance_report_enabled");

                            b1.Property<int>("SendFinanceReportInterval")
                                .HasColumnType("integer")
                                .HasColumnName("send_finance_report_interval");

                            b1.HasKey("PreferenceId");

                            b1.ToTable("preferences", "user_preferences");

                            b1.WithOwner()
                                .HasForeignKey("PreferenceId");
                        });

                    b.Navigation("FinancePreference");

                    b.Navigation("GeneralPreference");

                    b.Navigation("NotificationPreference");
                });
#pragma warning restore 612, 618
        }
    }
}
