// <auto-generated />
using System;
using Expenso.TimeManagement.Core.Persistence.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Expenso.TimeManagement.Core.Persistence.EfCore.Migrations
{
    [DbContext(typeof(TimeManagementDbContext))]
    [Migration("20240523040948_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TimeManagement")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobEntryTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("JobEntryTypeId");

                    b.ToTable("JobEntries", "TimeManagement");
                });

            modelBuilder.Entity("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("JobEntryStatuses", "TimeManagement");
                });

            modelBuilder.Entity("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("RunningDelay")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("JobEntryTypes", "TimeManagement");
                });

            modelBuilder.Entity("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntry", b =>
                {
                    b.HasOne("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryType", "JobEntryType")
                        .WithMany()
                        .HasForeignKey("JobEntryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryPeriod", "Periods", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.Property<string>("CronExpression")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("CurrentRetries")
                                .HasColumnType("integer");

                            b1.Property<Guid>("JobEntryId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("JobEntryStatusId")
                                .HasColumnType("uuid");

                            b1.Property<DateTimeOffset?>("LastRun")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<int>("MaxRetries")
                                .HasColumnType("integer");

                            b1.Property<bool>("Periodic")
                                .HasColumnType("boolean");

                            b1.HasKey("Id");

                            b1.HasIndex("JobEntryId");

                            b1.HasIndex("JobEntryStatusId");

                            b1.ToTable("JobEntryPeriods", "TimeManagement");

                            b1.WithOwner()
                                .HasForeignKey("JobEntryId");

                            b1.HasOne("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryStatus", "JobStatus")
                                .WithMany()
                                .HasForeignKey("JobEntryStatusId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("JobStatus");
                        });

                    b.OwnsMany("Expenso.TimeManagement.Core.Domain.Jobs.Model.JobEntryTrigger", "Triggers", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid");

                            b1.Property<string>("EventData")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EventType")
                                .IsRequired()
                                .HasMaxLength(150)
                                .HasColumnType("character varying(150)");

                            b1.Property<Guid>("JobEntryId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("JobEntryId");

                            b1.ToTable("JobEntryTriggers", "TimeManagement");

                            b1.WithOwner()
                                .HasForeignKey("JobEntryId");
                        });

                    b.Navigation("JobEntryType");

                    b.Navigation("Periods");

                    b.Navigation("Triggers");
                });
#pragma warning restore 612, 618
        }
    }
}
