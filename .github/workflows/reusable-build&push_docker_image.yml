name: build and push docker image
on:
  workflow_call:
    inputs:
      registry:
        description: "The docker registry"
        required: true
        type: string
      image:
        description: "The docker image name"
        required: true
        type: string
    secrets:
      token:
        description: "The GitHub token to use for authentication"
        required: true
      registry_username:
        description: "The username to use for the login to the docker registry"
        required: true
      registry_password:
        description: "The password to use for the login to the docker registry"
        required: true

jobs:
  build-and-push-docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}
          fetch-depth: 0

      - name: Log in to the GH container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5.5.0
      #   with:
      #     images: ${{ inputs.image }}
      #     tags: |
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=sha

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5.1.0
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'inputs.image:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'